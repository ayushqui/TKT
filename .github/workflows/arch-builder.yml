name: Build archlinux kernel

on:
  workflow_dispatch:  # <-- This will allow manual triggering of the workflow
    inputs:
      _cpusched:
        required: true
        type: string
      compiler:
        required: true
        type: string

env:
  _processor_opt: "alderlake"
  _git_mirror: "gregkh"
  _debugdisable: "true"
  _noccache: "true"
  _STRIP: "true"
  _kernel_on_diet: "true"
  _nofallback: "false"
  _distro: "Arch"

jobs:
  build-kernel:
    env:
      _cpusched: ${{ inputs._cpusched }}
      compiler: ${{ inputs.compiler }}

    runs-on: ubuntu-latest
    container: archlinux:latest

    steps:
      - name: Update mirrorlist
        run: |
          pacman -Sy --noconfirm reflector rsync curl wget aria2
          reflector --fastest 10 --verbose --country US --protocol rsync,https,http \
            --latest 10 --age 1 --sort rate --save /etc/pacman.d/mirrorlist
          if ! grep -q '^Server' /etc/pacman.d/mirrorlist; then
            echo 'Fallback: using default mirror'
            echo 'Server = https://mirror.rackspace.com/archlinux/$repo/os/$arch' > /etc/pacman.d/mirrorlist
          fi

      - name: Install dependencies and cleanup
        run: |
          pacman -Syu --needed --noconfirm \
            base-devel bc bison clang coreutils cpio docbook-xsl flex gcc git \
            graphviz imagemagick inetutils initramfs kmod libelf lld llvm mkinitcpio pahole \
            patchutils perl python-sphinx python-sphinx_rtd_theme schedtool sudo \
            tar wget xmlto xz
          sudo rm -rf /var/cache/pacman/pkg/*

      - name: Checkout TKT
        uses: actions/checkout@v4

      - name: Prepare for makepkg
        run: |
          useradd user -G wheel && echo "user ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers
          chown user -R {../,./}

      - name: Adjust compiler and compile Kernel
        env:
          _cpusched: ${{ inputs._cpusched }}
          compiler: ${{ inputs.compiler }}
        run: |
          git config --global --add safe.directory "$(pwd)"
          sed -i 's/^_compiler=".*"/_compiler="${{ inputs.compiler }}"/' customization.cfg
          su --preserve-environment user -c "yes '' | makepkg --noconfirm -s"

      - name: Package PKG files to $arch-linux format
        run: |
          arch=$(uname -m)
          for file in *linux*.pkg.tar.zst; do
            base=$(basename "$file")
            mv "$file" "Arch-linux-${arch}-${base#linux-}"
          done
          tar czf Arch-linux-${{ env._cpusched }}-${{ inputs.compiler }}.tar.gz Arch-linux*.pkg.tar*

      - uses: actions/upload-artifact@v4
        with:
          name: arch-kernel-packages-${{ env._cpusched }}-${{ inputs.compiler }}
          path: Arch-linux-${{ env._cpusched }}-${{ inputs.compiler }}.tar.gz

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        if: github.ref_type == 'tag'
        with:
          tag_name: ${{ github.ref_name }}
          name: "Arch Kernel Release ${{ github.ref_name }}"
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Assets
        uses: softprops/action-gh-release@v2
        if: github.ref_type == 'tag'
        with:
          files: Arch-linux*.pkg.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
